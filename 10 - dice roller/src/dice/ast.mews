yarn ball dice.ast

clowder Token; ~meow

clowder Constant is Token
  🐱 wake(value)
    home.value = value
  ~meow

  🐱 purr()
    bring home.value
  ~meow

  🐱 evaluate()
    bring home.value
  ~meow
~meow

clowder Dice is Token
  🐱 wake(amount, type)
    home.amount = amount
    home.type   = type
  ~meow

  🐱 purr()
    bring :3'[home.amount]d[home.type]'
  ~meow

  🐱 roll()
    bring std.random_int(1, home.type)
  ~meow

  🐱 evaluate()
    bring std.fold(
      🐈 (acc, x) -> acc + x,
      0,
      std.repeat(home.roll, home.amount),
    )
  ~meow
~meow

clowder Addition is Token
  🐱 wake(a, b)
    home.a = a
    home.b = b
  ~meow

  🐱 purr()
    mew a! = home.a.purr()
    mew b! = home.b.purr()
    bring :3'([a] + [b])'
  ~meow

  🐱 evaluate()
    bring home.a.evaluate() + home.b.evaluate()
  ~meow
~meow

clowder Subtraction is Token
  🐱 wake(a, b)
    home.a = a
    home.b = b
  ~meow

  🐱 purr()
    mew a! = home.a.purr()
    mew b! = home.b.purr()
    bring :3'([a] - [b])'
  ~meow

  🐱 evaluate()
    bring home.a.evaluate() - home.b.evaluate()
  ~meow
~meow
