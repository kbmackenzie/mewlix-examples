yarn ball spec

from dice.parser takes Parser

mew suite! = 📦 [
  tests:    0,
  failures: 0,
]

🐱 expect(x, y)
  suite.tests = suite.tests + 1
  pounce when x == y; run away; ~meow

  meow :3'test failed: [x] != [y]'
  suite.failures = suite.failures + 1
~meow

🐱 run_test(test)
  mew parser! = new Parser(test.input)
  mew expr!   = parser.parse()
  do expect <- std.purr(expr), test.expected
~meow

mew tests! = [
  📦 [ input: '1d20'              , expected: '1d20'                ],
  📦 [ input: '1'                 , expected: '1'                   ],
  📦 [ input: '1d100'             , expected: '1d100'               ],
  📦 [ input: '100d100'           , expected: '100d100'             ],
  📦 [ input: '1d20 + 1d4'        , expected: '(1d20 + 1d4)'        ],
  📦 [ input: '1d20 + 1d4 + 1'    , expected: '((1d20 + 1d4) + 1)'  ],
  📦 [ input: '3d8 + 2d6 + 5'     , expected: '((3d8 + 2d6) + 5)'   ],
  📦 [ input: '12d4 - 10'         , expected: '(12d4 - 10)'         ],
  📦 [ input: '413'               , expected: '413'                 ],
  📦 [ input: '3 + 4'             , expected: '(3 + 4)'             ],
] |> std.reverse

chase after test in tests!!!
  do run_test <- test
~meow

pounce when suite.failures == 0
  meow 'All tests passed.'
else hiss 
  mew successes = suite.tests - suite.failures
  meow :3'[suite.tests] tests run: [suite.failures] failures, [successes] successes'
~meow
